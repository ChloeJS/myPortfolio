<%@ page contentType="text/html; charset=utf-8" %>
<!doctype html>
<html lang="ko">
<head>
<title><%=util.Property.title %></title>
<%@ include file="/WEB-INF/view//include/headHtml.jsp" %>
</head>
<body>
<div id="boardWrap" class="bbs">
	<div class="pageTitle">
		<h2>자기소개</h2>
	</div>
	<!--//pageTitle-->
	<div class="write">
		<table>
			<colgroup>
				<col style="width:150px"/>
				<col style="width:*"/>
			</colgroup>
			<tbody>
				<tr>
					<th>지원 동기</th>
					<td>
						[개발자와의 협업 경험 : 개발자 직무 전환 도전의 계기]<br>
						복합기 솔루션 회사의 영업 관리팀에 재직하면서 신용 평가 업무를 담당하면서 ‘신용 평가 자동화를 통한 업무 효율성 개선’ 과정에 참여하면서 전산팀 개발자와 장기간 협업 했던 경험이 있습니다. 신용정보제공기관으로부터 얻은 고객 DB를 가공한 자료를 경우에 따라 보기 쉽게 분류하여 테스트를 진행하고, 개발자와 선임들의 피드백을 거쳐 최종적으로 LIVE로 진행할 수 있었습니다.
						원했던 기능이 실제로 구현되는 것을 보고 개발 직무에 흥미가 생겼습니다. 그리고 이제는 IT와 관련이 없는 회사가 거의 없고, 경험했듯이 어떤 형태로든 기술적인 부분이 업무에 연결되어 있다고 생각했습니다. 그래서 새로운 도전을 위해 퇴사한 후, 개발자가 되기 위해 ‘빅데이터 분석(with 파이썬)과 엘라스틱 서치를 활용한 자바(Java) 웹 개발자 양성’ 국비 지원 과정을 수료하면서 개발자가 되기 위해 첫걸음을 내딛었습니다.
					</td>
				</tr>
				<tr>
					<th>입사 후 포부</th>
					<td>
						[기본에 충실한 주니어 개발자 → 역량기반 시니어 개발자로 성장]<br>
						`정답 없는 세상을 살아가기 위해서는, 기본에 충실해야 합니다.`라는 말을 들은 적이 있습니다. 저 역시 신입사원이던 실무자이던, `기본`이 가장 중요하다고 생각합니다. 기본이 되어 있어야 그 이상의 발전이 가능하기 때문입니다.
입사 직후, 먼저 기본적인 업무 프로세스를 파악하도록 하겠습니다. 업무 흐름 설명과 가이드를 바탕으로, 스스로 분석하고 이해하여 주니어로서 서포트 하겠습니다. 그리고 해당 조직과 산업에 대한 이해도를 높이겠습니다. 신입 사원으로서 기본기와 조직에 대한 이해도가 부족한 상태에서 성과가 되는 것만 추구하지 않겠습니다. 따라서 이를 바탕으로 선배님들께서 맡아 오신 업무의 전반적인 프로세스를 체득하여 제 것으로 만들고, 실무 역량을 향상시키기에 주력할 것입니다. 향후 계획은, 리눅스 마스터 1급과 정보처리기사 자격증, 그리고 데이터 분석 역량 개발을 위해 ADsP를 취득할 예정입니다.
그 이후 시니어 개발자로 넘어가는 과정에서 후배를 잘 이끌고 상사의 고민을 덜어줄 수 있도록 역량 개발을 항상 염두에 두고 업무에 임하겠습니다. 실무자로서 단순 해결이 아니라 정확한 원인 확인과 실무 적용을 위해서 개념들을 꾸준히 학습하고, V-LOOKUP, SUMIF 등 엑셀 함수를 활용하는 등 OA활용 능력을 바탕으로 문서화하겠습니다. 그리고 개발 과정에서 비효율적인 부분이 있는지 찾고 개선안을 제안하겠습니다. 또한 유관 부서와 더욱 효율적이고 협력적으로 일하기 위해 프로세스를 개선하고 회고하여, 일도 사람도 놓치지 않는 유능한 시니어 개발자가 되도록 하겠습니다.
					</td>
				</tr>
				<tr>
					<th>직무 관련 경험</th>
					<td>
						[호텔 예약 웹 서비스 프로젝트 경험 : 개발 공부의 기초, 게시판 구현]<br>
						5월부터 8개월 동안 진행되는 국비 지원 개발자 과정을 이수하고 있습니다. JAVA, JSP, SQL, Spring, html, CSS, JavaScript, jQuery, Ajax, Linux, Git, Python 등 다양한 프로그래밍 언어를 배웠습니다. 현재는 MongoDB와 Elastic Search를 배우고 있는 단계에 있습니다. 저는 과정을 이수하면서 JAVA 개발자로서 Spring Framework의 mvc구조를 기반으로 언어를 다루는 데에 주력했습니다. 본인 포함 5명의 팀원들과 그동안 습득한 언어들을 활용해, 호텔 예약 웹 서비스 테마의 프로젝트를 수행했습니다. 주제 및 데이터 선정-기획-설계-기능 구현 등 웹 서비스 개발의 전 과정에 참여해볼 수 있었습니다.
팀 프로젝트 진행에 있어 중요하고 고려해야 하는 것 중 하나는, '의사소통'이라고 생각합니다. 먼저, 같은 기능의 코드를 사람마다 다르게 설명하니 소통에서 오해가 생기곤 했습니다. 그래서 기술 명세서와 ERD, diagram을 작성하여 모두가 전체 흐름을 알 수 있도록 했습니다. 그리고 Figma라는 협업 툴을 제안하여 팀원 전원이 실시간으로 화면 기획 내용을 공유하고 수정이 필요한 사항을 메모로 남기는 등 시간을 효율적으로 사용하고 원활히 소통하여 진행할 수 있었습니다. 향후에는 Figma의 다양한 기능들을 개인적으로 더 익힐 예정입니다. 팀 프로젝트 진행에 있어 중요하고 고려해야 하는 것 중 또 다른 하나는, '일정 관리'라고 생각합니다. 한정된 프로젝트 기간 내에 일정을 조율하고 관리하여 프로젝트를 마무리하는 것도 개발자로서의 필수적인 역량이라고 생각합니다. 프로젝트 설계 단계에서도 현실성을 고려하여 구현하고 싶은 기능들을 리스트업한 후에 서비스 특성에 따라 우선순위를 정했고, 추후에 추가해나가자는 방향성을 제시했습니다. 짧은 기간에 서비스를 만들고 발표해야 하다 보니 팀 빌딩, 의사 결정, 소통과 협업 방식 등을 빠르고 효율적으로 하는 방법을 직접 경험하며 배울 수 있었습니다.
팀 프로젝트에서 저는 고객센터(게시판 영역)를 담당했습니다. 게시판을 담당한 이유는, 게시판 구현은 개발의 근본이자 응용의 시작이라고 생각했기 때문입니다. 실제로 여러 개의 게시판을 구현하는 과정에서 배운 기술들을 응용해보면서 구조의 흐름을 보다 이해할 수 있게 되었습니다. 전체 게시판에서 기본적인 CRUD를 구현했으며, 부가적으로 카카오톡 공유 API를 활용해 게시물 공유, 페이지 처리, 검색, datediff()를 활용한 게시물 상단 고정, 이전글/다음글 등의 다양한 기능들을 구현해보았습니다. 프로젝트를 진행하면서 가장 어려웠던 점은. 가장 구현하고 싶었던 '다중 검색 조회 기능'이었습니다. jQuery, Ajax를 활용하여 다양한 상태 값의 검색 조건을 파라미터로 전송/요청하여 JSON형식으로 데이터를 응답 받는 구조가 눈에 그려지지 않았기 때문입니다. 제가 지금까지 학습하면서 무엇이 부족한지 명확하게 알게 된 순간이었습니다. 아무래도 머릿속에서 구조의 흐름이 명확하게 그려지지 않았기 때문에, 원하는 값을 요청해서 전달을 받아 화면에 출력되기까지의 과정을 그림으로 그리거나 글로 쓰면서 구체화해보았습니다. 이때 퍼즐처럼 흩어진 개념들이 천천히 하나의 구조로 연결되었습니다. 검색 조건에 해당하는 파라미터 값들을 Ajax로 url에 요청한 후에, Controller에서 @Responsebody로 값을 리턴하여 Json형식으로 받아와 parsing하여 기능을 구현할 수 있었습니다. 또 해당 페이지를 NAVER API 코드를 참조해 API로 만들어 다른 URL에서 호출해 화면에 출력해보면서 REST API 개념도 직접 경험해볼 수 있었습니다.
이를 통해 백엔드 개발자가 되기 위해서는, 단순히 코드 자체에 집중해 결과가 나오게 하겠다는 관점이 아닌, 전반적인 구조와 흐름을 충분히 이해하고 추상화 시키는 능력을 길러야 한다는 것을 깨달았습니다.<br><br>
[개인 프로젝트 경험 : 쇼핑몰 사이트 구현 (진행 중)]<br>
팀 프로젝트를 하면서 구현하지 못했던 기능들을 개발하는 경험을 쌓기 위해 개인적으로 프로젝트를 진행하고 있습니다. 지금까지 기본적인 CRUD가 적용된 공지사항, Ajax로 이미지가 업로드 된 갤러리 게시판, 계층형 구조의 답변 게시판, Ajax를 활용한 댓글 게시판을 구현 완료한 상태입니다. 페이지 처리와 댓글 목록 처리는 재사용이 가능하고 개발과 유지 보수가 용이하게 되도록 모듈화 했습니다. 이외에도 개인 역량 개발을 위해 회원 관리, 일정 관리, 장바구니, 별점 평가, 리뷰 그리고 결제(Iamport API 활용)기능, 엘라스틱 서치를 활용한 상품 통합 검색 기능을 추가적으로 업데이트할 계획입니다. 개인 프로젝트의 최종 목표는 실제와 유사한 쇼핑몰 사이트를 개발하는 것입니다. 그리고 추후에 쇼핑몰 뿐만 아니라 다양한 테마의 사용자 맞춤 사이트를 JPA, Spring Security 등 다양한 방식을 활용하여 구현해보고 싶습니다.

					</td>
				</tr>
				<tr>
					<th>문제 해결 경험</th>
					<td>
						[문제 해결 경험 : 내부 업무 프로세스 개선]<br>
						후지필름비즈니스이노베이션 재경부 영업 관리팀에서 채권 리스크 관리 업무를 담당했습니다. 미수금(Account Receivables)을 확인하여, 거래에 여신 문제가 없는지 검토하는 것이 주 업무 중에 하나였습니다. 영업 부서에서 계약을 맺기 전 고객의 계약 별 AR내역을 요청하면 제가 전달해주는 프로세스로 진행되었습니다.
하지만 AR은 시시각각 달라지기 때문에 가장 최신 데이터가 필요한데, 실제 AR현황의 차이로 인해 영업 부서와의 소통이 문제가 되곤 했습니다. 저는 이 소통의 문제가 영업 활동 뿐만 아니라 회사 매출에도 영향을 끼칠 것이라고 생각했습니다. 보수적인 분위기의 부서였기 때문에 업무 전임자는 기존 프로세스를 전혀 문제시 하지 않았으나, 저는 최신 AR현황이 자동화를 통해 전사에 주기적으로 공유된다면 영업 부서를 빠르게 서포트하고 AR과 관련된 모든 팀에서 업무를 수월하고 정확하게 처리할 수 있을 것이라고 생각했습니다.
이후 일부 영업사원으로부터 해당 상황의 개선이 실제 업무 활동에 있어 효과적일지 설문을 진행했습니다. 그리고 취합한 의견들을 바탕으로 팀 내부에 의견을 제시했고, 이를 받아들인 선임들과 함께 프로젝트를 진행했습니다. 그리고 전산의 데이터를 인트라넷에 연동시켜야 하기 때문에 전산팀과의 의사소통도 중요했습니다. 수차례의 피드백을 통해 자동화 시스템을 구축할 수 있었고, 임원 보고 및 전사 공지 후 Live로 진행되고 있습니다. 이 결과, AR관련 문의 건이 60% 이상 줄어들면서 업무 효율성이 증대되었습니다. 또한 일주일에 한번 AR을 업데이트하는 업무도 생략되어 기업 여신 평가 업무에 더 집중할 수 있게 되었습니다.
익숙해질수록 매너리즘에 빠질 수 있지만, 능동적으로 스스로의 문제를 만들고, 그 문제의 해결 과정을 옆 사람들과 논의하고 비교하면서 값진 경험을 할 수 있었다고 생각합니다. 개발 직무에서도 이 경험을 살려, 능동적으로 문제를 만들고 해결하면서 계단을 하나하나 밟듯이 계단형으로 차근차근 성장하는 백엔드 개발자가 될 수 있도록 노력하겠습니다.
					</td>
				</tr>
				<tr>
					<th>성격의 장단점</th>
					<td>
						[효율적인 이타주의자]<br>
						저의 장점은 `이타적인 성격`을 가졌다는 점입니다. 상대방에게 늘 열려 있으며 자신의 기분과 입장보다 상대방에 대해 먼저 생각하고 행동합니다. 기본적으로 모난 성격이 아니며, 사람들과 잘 어울려 지내는 것과 사람에 대한 호기심이 많은 것 또한 이타적인 성격과 연결되는 또 다른 장점입니다. 이는 조직 생활을 하면서 구성원들과의 의사소통이나 협업 과정에서 돋보일 수 있는 장점일 것입니다. 실제로 영업 관리팀에서 다양한 부서의 동료들과 소통하며 업무를 처리할 때에 장점임을 확신할 수 있었습니다. 이 장점은 좋은 개발자가 되는 데에도 긍정적인 바탕이 되어줄 것입니다. 개인적으로 좋은 개발자란, 좋은 동료들과 함께 어울릴 수 있는 오픈 마인드를 가진 개발자라고 생각합니다. 소속된 조직에 대한 애정을 가지며 좋은 동료들과 좋은 시너지를 창출해내는 `좋은` 개발자가 되겠습니다.

제가 생각하는 저의 단점은, 신중함 때문에 실제 업무를 수행하기까지 일정 시간이 소요된다는 점입니다. 이전 직장에서 담당했던 자금 관리 업무는 신중함이 필수 역량이었습니다. 그래서 어떤 일을 하던지 업무 수행 전에 계획과 구상을 하는 데에 시간이 다소 필요했습니다. 그러나 개발자 양성 과정에서 팀 프로젝트를 경험하면서 처음 계획을 세울 때 너무 많은 시간을 쓰기보다는 구현하고 싶은 기능과 실제 사용자 입장에서 필요로 하는 기능이 무엇일지 구분하면서 초안 수정을 거듭했습니다. 이 과정에서 자연스럽게 효율적으로 일정 관리를 하며 프로젝트 기한을 맞출 수 있었습니다. 이전 직무를 수행할 때의 습관은 줄여나가고 개발 직무에 필요한 일 처리 방식에 익숙해지도록 노력 중이며 그것을 바탕으로 효율적인 개발자가 되겠습니다.
					</td>
				</tr>
				<tr>
					<th>성장 과정 및 가치관</th>
					<td>
						[원칙과 융통성을 구분하자]<br>
						저는 '원칙과 융통성을 구분하자'는 가치관을 따르고 있습니다. 원칙과 융통성은 직장 뿐만 아니라 대인 관계나 가치를 판단함에서도 고민해야 하는 요소입니다. 원칙 만을 지키는 사람은 경직되어 일 처리가 유연하지 못할 것이고, 모든 일을 유연하게 처리하려는 사람은 어떤 일 처리 방식을 지녔는지 예측할 수 없으므로 함께 일하고 싶지 않을 것입니다.
그러나 어떤 일을 하더라도 원칙과 융통성 중 한쪽을 선택해야 합니다. 그래서 제가 선택한 방법은 매뉴얼과 관례의 분석입니다. 매뉴얼은 원칙이 쌓여 문서로 체계화 된 것이고, 관례는 융통성이 쌓여 만들어진 방식입니다. 저는 매뉴얼을 꼼꼼히 읽어 의도를 분석하고, 관례는 융통성 발휘의 의도와 결과를 파악합니다. 의도를 모르는 채로 맹목적으로 따르는 것만큼 위험한 것은 없다고 생각합니다.
매뉴얼 및 관례의 분석은 일에 대한 이해와 관심이 없다면 하기 힘든 것입니다. 업무 이해도를 높이면서 업무 능력 향상을 위해 원칙과 융통성을 구분하며 효율적으로 임하겠습니다.
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</div>
<!--//boardWrap-->
</body>
</html>